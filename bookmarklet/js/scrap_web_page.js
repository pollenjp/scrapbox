javascript: (function () {
"use strict";const project_name="pollenJP-Memo";class ParsedData{_title;_body;constructor(e,t){this._title=e,this._body=t}get title(){return this._title}get body(){return this._body}}function format(e,t){return t.replace("ddd",["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][e.getDay()]).replace("yyyy",`${e.getFullYear()}`).replace("MM",`0${e.getMonth()+1}`.slice(-2)).replace("dd",`0${e.getDate()}`.slice(-2)).replace("hh",`0${e.getHours()}`.slice(-2)).replace("mm",`0${e.getMinutes()}`.slice(-2)).replace("ss",`0${e.getSeconds()}`.slice(-2))}function splitUrlPath(e){let t=e.split("/").slice(1);return 0==t.slice(-1)[0].length&&(t=t.slice(0,-1)),t}function returnTitlePathPart(e){return 1==e.length?"":` (${decodeURI(e)})`}function safeWrapTitle(e,t){return e.endsWith(`(${t})`)?e:`${e} (${t})`}function getTwitterImageUrls(e){const t=[];return e.forEach((function(e){if("Image"==e.alt||"画像"==e.alt){const a=new URL(e.src);t.push(new URL(`${a.origin}${a.pathname}.jpg`))}})),t}function generateYouTubeUserPageTitle(e){return`${e} (www.youtube.com)`}function getChildElementByTagName(e,t){t=t.toUpperCase();for(const a of e.children)if(a.tagName==t)return a;throw console.log("==== element ==="),console.log(e),console.log("==== element.children ==="),console.log(e.children),new Error(`Element not found: ${t} ${e}`)}function getChildElementByTagNameAndId(e){const t=e.tagName.toUpperCase();for(const a of e.element.children)if(a.tagName===t&&a.id===e.id)return a;throw console.log(e.element),new Error(`Element not found: ${t} ${e.id} ${e.element}`)}function getChildElementByTagNameAndClass(e,t,a){t=t.toUpperCase();for(const r of e.children){if(r.tagName!==t)continue;let e=!0;for(const t of a)if(!r.classList.contains(t)){e=!1;break}if(e)return r}throw console.log(e),new Error(`Element not found: ${t} ${a}`)}function getChildElementByTagNameAndAttribute(e,t,a){t=t.toUpperCase();for(const r of e.children)if(r.tagName===t&&null!==r.getAttribute(a))return r;throw console.log(e),new Error(`Element not found: ${t} / ${a} / ${e}`)}Element.prototype.getChildElementByTagNameAndId=function(e){const t=e.tagName.toUpperCase();for(const a of this.children)if(a.tagName===t&&a.id===e.id)return a;throw console.log(this),new Error(`Element not found: ${t} ${e.id} ${this}`)};class PageParser{_title;_body=[];_url;_document;_urlPathList;constructor(e,t,a){this._title=e,this._url=t,this._document=a,this._urlPathList=splitUrlPath(this._url.pathname)}do(){return this.#e(),console.log("parsePreCustom"),this.parsePreCustom(),this.#t(),console.log("parsePostCustom"),this.parsePostCustom(),this.#a(),new ParsedData(this._title,this._body)}#e(){console.log("parsePreCommon")}parsePreCustom(){throw new Error("Not Implemented Error: This method should be overridden.")}#t(){console.log("parseMiddleCommon"),this._body.push(`[${this._url.hostname}]`,`Scrap at [date${format(d,"yyyy-MM-dd")}]`,"",`\`${this._document.title}\``,`${this._url.toString()}`,"")}parsePostCustom(){throw new Error("Not Implemented Error: This method should be overrided.")}#a(){console.log("parsePostCommon"),this._title=safeWrapTitle(this._title,this._url.hostname),this._body.unshift(this._title);const e=window.getSelection(),t=null!==e?e.toString():"";let a=[];t.trim()&&(a=t.split(/\n/g).map((function(e){return""!==e?`  > ${e}`:null})));for(let e=0;e<a.length;++e)a.forEach((e=>{null!==e&&this._body.push(e)}))}}class OtherPageParser extends PageParser{parsePreCustom(){this._title+=returnTitlePathPart(this._url.pathname)}parsePostCustom(){console.log("parsePostCustom")}}class AtcoderJpPageParser extends PageParser{parsePreCustom(){this._title+=` (${this._urlPathList.slice(0,2).join("/")})`}}class GitHubComPageParser extends PageParser{parsePreCustom(){switch(this._urlPathList.length){case 0:return;case 1:return void this.generatePageAtUserPage();case 2:return void this.generatePageAtReposRootPage();default:switch(this._urlPathList[2]){case"tree":case"blob":return void this.generatePageAtBlobOrTreePage();default:return void this.generatePageAtOtherPage()}}}parsePostCustom(){console.log("parsePostCustom")}generatePageAtUserPage(){const e=this._urlPathList[0];this._title=e}generatePageAtReposRootPage(){const e=this._urlPathList[0],t=this._urlPathList[1];this._title=`${e}/${t}`,this._body.push(`[${this._url.hostname}/${e}/${t}]`),this._body.push(`[${safeWrapTitle(e,this._url.hostname)}]`)}generatePageAtBlobOrTreePage(){const e=this._urlPathList[0],t=this._urlPathList[1];this._title=this._urlPathList.join("/");const a=safeWrapTitle(`${e}/${t}`,this._url.hostname);this._body.push(`[${a}]`)}generatePageAtOtherPage(){this._title+=returnTitlePathPart(this._url.pathname);const e=this._urlPathList.slice(0,2).join("/");this._body.push(`[${safeWrapTitle(e,this._url.hostname)}]`)}}class GistGitHubComPageParser extends PageParser{parsePreCustom(){switch(this._urlPathList.length){case 0:break;case 1:{const e=this._urlPathList[0];this._title=e;break}case 2:{const e=this._urlPathList[0];this._title=this._urlPathList.join("/"),this._body.push(`[${safeWrapTitle(e,this._url.hostname)}]`);break}default:alert(`Failed: ${this._urlPathList}`)}}parsePostCustom(){console.log("parsePostCustom")}}class QiitaComPageParser extends PageParser{parsePreCustom(){const e=this._urlPathList[0];switch(this._urlPathList.length){case 1:this._title=e;break;case 3:this._title+=returnTitlePathPart(this._url.pathname),this._body.push(`[${safeWrapTitle(e,this._url.hostname)}]`);break;default:this._title+=returnTitlePathPart(this._url.pathname)}}parsePostCustom(){console.log("parsePostCustom")}}class SpeakerdeckComPageParser extends PageParser{parsePreCustom(){const e=this._urlPathList[0];switch(this._urlPathList.length){case 1:this._title=e;break;case 2:this._title+=returnTitlePathPart(this._url.pathname),this._body.push(`[${safeWrapTitle(e,this._url.hostname)}]`)}}parsePostCustom(){console.log("parsePostCustom")}}class TwitterComPageParser extends PageParser{parsePreCustom(){switch(this._urlPathList.length){case 0:return;case 1:return void this.parseUserPage();default:return void this.parseTweetPage()}}parsePostCustom(){getTwitterImageUrls([].slice.call(this._document.querySelectorAll("img"))).forEach((e=>{this._body.push(`[${e.toString()}]`)}))}parseUserPage(){const e=TwitterComPageParser.parseUserNameFromUrlPath(this._url.pathname);this._title=TwitterComPageParser.getUserPageTitle(e),this._body.push("[Twitter User Page]")}parseTweetPage(){const e=TwitterComPageParser.parseUserNameFromUrlPath(this._url.pathname);this._title=`${this._title}${returnTitlePathPart(this._url.pathname)}`,this._body.push(`[${safeWrapTitle(TwitterComPageParser.getUserPageTitle(e),this._url.hostname)}]`)}static getUserPageTitle(e){return`${e} (/${e})`}static parseUserNameFromUrlPath(e){const t=splitUrlPath(e);return t.length<1&&alert(`Failed to get user from ${e}`),t[0]}}class YouTubeComPageParser extends PageParser{parsePreCustom(){switch(this._urlPathList[0]){case"watch":return void this.preAtVideoPage();case"playlist":return void this.preAtPlaylistPage();case"shorts":return void this.preAtShortsPage();default:if("@"!=this._urlPathList[0].slice(0,1))throw new Error("Not Supported URI");this.preAtUserPage()}console.log("debug: no processing.")}parsePostCustom(){switch(this._urlPathList[0]){case"watch":return void this.postAtVideoPage();case"playlist":return void this.postAtPlaylistPage();case"shorts":return void this.postAtShortsPage();default:if("@"==this._urlPathList[0].slice(0,1))return void this.postAtUserPage()}console.log("debug: no processing.")}extractVideoIdFromVideoUrl(e){const t=e.searchParams.get("v");if(null===t)throw new Error(`Failed to get video id from the url (${e})`);return t}preAtVideoPage(){let e;{const t=this._document?.getElementById("above-the-fold")?.querySelector("#top-row")?.querySelector("#owner")?.getElementsByTagName("a");if(void 0===t)throw new Error("Failed to get channel url");e=new URL(t[0].href)}const t=splitUrlPath(e.pathname).at(-1);if(void 0===t)throw new Error("Failed to get channel id");const a=this.extractVideoIdFromVideoUrl(this._url),r=format(YouTubeComPageParser.extractVideoUploadDateFromVideoPage(document),"yyyy-MM-dd");this._title=`${r} ${this._title} (${a}) (${t})`,this._body.push(`[${generateYouTubeUserPageTitle(t)}]`)}postAtVideoPage(){const e=this.extractVideoIdFromVideoUrl(this._url),t=new URL(`https://img.youtube.com/vi/${e}/maxresdefault.jpg`);this._body.push(`[${this._url.toString()}]`,`[${t.toString()}]`)}preAtPlaylistPage(){const e=function getPlaylistName(e){let t=e;if(t=getChildElementByTagName(t,"body"),t=getChildElementByTagName(t,"ytd-app"),t=getChildElementByTagNameAndId({element:t,tagName:"div",id:"content"}),t=getChildElementByTagName(t,"ytd-page-manager"),t=getChildElementByTagName(t,"ytd-browse"),t=getChildElementByTagName(t,"ytd-playlist-header-renderer"),t=getChildElementByTagNameAndClass(t,"div",["immersive-header-container","style-scope","ytd-playlist-header-renderer"]),t=getChildElementByTagNameAndClass(t,"div",["immersive-header-content","style-scope","ytd-playlist-header-renderer"]),t=getChildElementByTagNameAndClass(t,"div",["thumbnail-and-metadata-wrapper","style-scope","ytd-playlist-header-renderer"]),t=getChildElementByTagNameAndClass(t,"div",["metadata-wrapper","style-scope","ytd-playlist-header-renderer"]),t=getChildElementByTagName(t,"yt-dynamic-sizing-formatted-string"),t=getChildElementByTagNameAndId({element:t,tagName:"div",id:"container"}),t=getChildElementByTagNameAndId({element:t,tagName:"yt-formatted-string",id:"text"}),console.log(t),t instanceof HTMLElement)return t.innerText;throw new Error(`Failed to get playlist name. the element is not HTMLElement. (${t})`)}(this._document.documentElement);const t=function getChannelNameAndURL(e){let t=e;if(t=getChildElementByTagName(t,"body"),t=getChildElementByTagName(t,"ytd-app"),t=getChildElementByTagNameAndId({element:t,tagName:"div",id:"content"}),t=getChildElementByTagName(t,"ytd-page-manager"),t=getChildElementByTagName(t,"ytd-browse"),t=getChildElementByTagName(t,"ytd-playlist-header-renderer"),t=getChildElementByTagNameAndClass(t,"div",["immersive-header-container","style-scope","ytd-playlist-header-renderer"]),t=getChildElementByTagNameAndClass(t,"div",["immersive-header-content","style-scope","ytd-playlist-header-renderer"]),t=getChildElementByTagNameAndClass(t,"div",["thumbnail-and-metadata-wrapper","style-scope","ytd-playlist-header-renderer"]),t=getChildElementByTagNameAndClass(t,"div",["metadata-wrapper","style-scope","ytd-playlist-header-renderer"]),t=getChildElementByTagNameAndClass(t,"div",["metadata-action-bar","style-scope","ytd-playlist-header-renderer"]),t=getChildElementByTagNameAndClass(t,"div",["metadata-text-wrapper","style-scope","ytd-playlist-header-renderer"]),t=getChildElementByTagNameAndClass(t,"div",["metadata-owner","style-scope","ytd-playlist-header-renderer"]),t=getChildElementByTagNameAndId({element:t,tagName:"yt-formatted-string",id:"owner-text"}),t=getChildElementByTagName(t,"a"),!(t instanceof HTMLAnchorElement))throw new Error(`Failed to get channel name and url. the element is not HTMLAnchorElement. (${t})`);return{name:t.text,url:new URL(t.href)}}(this._document.documentElement);console.log(t.name,t.url);const a=this._url.searchParams.get("list");if(null===a)throw new Error("Failed to get playlist id.");const r=splitUrlPath(t.url.pathname).at(-1);if(void 0===r)throw new Error("Failed to get channel id.");this._title=`${e} (playlist:${a}) (${r})`,this._body.push(`[${generateYouTubeUserPageTitle(r)}]`)}postAtPlaylistPage(){this._body.push(`[${this._url.toString()}]`)}preAtShortsPage(){const e=splitUrlPath(function getChannelUrlAtShortsPage(e){const t=e.getElementById("page-manager");if(null===t)throw new Error("'page-manager' id is not found");let a=getChildElementByTagName(t,"ytd-shorts");if(a=getChildElementByTagNameAndId({element:a,tagName:"div",id:"shorts-container"}),a=getChildElementByTagNameAndId({element:a,tagName:"div",id:"shorts-inner-container"}),a=getChildElementByTagNameAndAttribute(a,"ytd-reel-video-renderer","is-active"),a=getChildElementByTagNameAndClass(a,"div",["overlay","style-scope","ytd-reel-video-renderer"]),a=getChildElementByTagName(a,"ytd-reel-player-overlay-renderer"),a=getChildElementByTagNameAndClass(a,"div",["metadata-container"]),a=getChildElementByTagNameAndId({element:a,tagName:"div",id:"overlay"}),a=getChildElementByTagName(a,"reel-player-header-renderer"),a=getChildElementByTagNameAndId({element:a,tagName:"div",id:"channel-container"}),a=getChildElementByTagNameAndId({element:a,tagName:"div",id:"channel-info"}),a=getChildElementByTagName(a,"ytd-channel-name"),a=getChildElementByTagNameAndId({element:a,tagName:"div",id:"container"}),a=getChildElementByTagNameAndId({element:a,tagName:"div",id:"text-container"}),a=getChildElementByTagNameAndId({element:a,tagName:"yt-formatted-string",id:"text"}),a=getChildElementByTagName(a,"a"),!(a instanceof HTMLAnchorElement))throw new Error(`Failed to get channel url. the element is not HTMLAnchorElement. (${a})`);return new URL(a.href)}(this._document).pathname)[0];this._title=`${this._document.title}${returnTitlePathPart(this._url.pathname)}`,this._body.push(`[${generateYouTubeUserPageTitle(e)}]`)}postAtShortsPage(){const e=this._urlPathList.at(-1);if(void 0===e)throw new Error("Failed to get video id.");const t=new URL(`https://img.youtube.com/vi/${e}/maxresdefault.jpg`);this._body.push(`[${t.toString()}]`)}getChannelInfoAtUserPage(){const e=this._document.getElementById("inner-header-container")?.getChildElementByTagNameAndId({tagName:"div",id:"meta"}).getChildElementByTagNameAndId({tagName:"ytd-channel-name",id:"channel-name"}).getChildElementByTagNameAndId({tagName:"div",id:"container"}).getChildElementByTagNameAndId({tagName:"div",id:"text-container"}).getChildElementByTagNameAndId({tagName:"yt-formatted-string",id:"text"}).textContent??(()=>{throw new Error("Failed to get channel name.")})(),t=this._document.getElementById("channel-handle")?.textContent??(()=>{throw new Error("Failed to get channel id.")})();return{channelName:e,channelId:t,channelUrl:new URL(`${this._url.origin}/${t}`)}}preAtUserPage(){const e=this.getChannelInfoAtUserPage();this._title=`${generateYouTubeUserPageTitle(e.channelId)}`;let t=`${e.channelName}${returnTitlePathPart(e.channelUrl.pathname)}`;t=safeWrapTitle(t,this._url.hostname),this._body.push(`[${t}]`),this._body.push("[YouTube User Page]")}postAtUserPage(){const e=this._document.getElementById("channel-container")?.getChildElementByTagNameAndId({tagName:"div",id:"channel-header"}).getChildElementByTagNameAndId({tagName:"div",id:"channel-header-container"}).getChildElementByTagNameAndId({tagName:"yt-img-shadow",id:"avatar"}).getChildElementByTagNameAndId({tagName:"img",id:"img"})??(()=>{throw new Error("Failed to get avatar image.")})();if(!(e instanceof HTMLImageElement))throw new Error("Failed to get avatar image. the element is not HTMLImageElement.");const t=new URL(e.src);this._body.push(`[${t.toString()}#.jpg]`)}static extractVideoUploadDateFromVideoPage(e){const t=e.getElementById("columns")?.querySelector("#primary")?.querySelector("#primary-inner")?.querySelector("#above-the-fold")?.querySelector("#bottom-row")?.querySelector("#description")?.querySelector("#description-inner")?.querySelector("#tooltip")?.textContent;if(null==t)return new Date;{const e=/.*• (?<date>[0-9]{4}\/[0-9]{2}\/[0-9]{2}).*/.exec(t);if(null!==e&&void 0!==e.groups)return new Date(e.groups.date)}{const e=/.*• (?<hour>[0-9]{2}) 時間前.*/.exec(t);if(null!==e&&void 0!==e.groups){const t=Number(e.groups.hour),a=new Date;return a.setHours(a.getHours()-t),a}}return new Date}}function parsePage(e,t,a){switch(console.log("parsePage"),t.hostname){case"atcoder.jp":return new AtcoderJpPageParser(e,t,a).do();case"github.com":case"gitlab.com":return new GitHubComPageParser(e,t,a).do();case"gist.github.com":return new GistGitHubComPageParser(e,t,a).do();case"speakerdeck.com":return new SpeakerdeckComPageParser(e,t,a).do();case"qiita.com":case"zenn.dev":return new QiitaComPageParser(e,t,a).do();case"twitter.com":case"mobile.twitter.com":return new TwitterComPageParser(e,t,a).do();case"www.youtube.com":return new YouTubeComPageParser(e,t,a).do();default:return new OtherPageParser(e,t,a).do()}}const d=new Date;{const e=new URL(window.location.href);let t=window.prompt("Bookmark to Scrapbox",document.title);if(null==t)throw alert("Need title"),new Error("Need title");t=t.replace(/\[/gi,"").replace(/\]/gi,""),t=t.replace(/`/gi,""),t=t.replace(/^\//,"\\/"),t=t.replace(/(https?:\/\/[^ ]*)/g,"");const a=parsePage(t,e,document);console.log(a),window.open(`https://scrapbox.io/${encodeURIComponent(project_name)}/${encodeURIComponent(a.title.trim())}?body=${encodeURIComponent(a.body.join("\n"))}`)}})();
